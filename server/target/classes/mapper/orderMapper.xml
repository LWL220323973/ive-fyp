<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.server.mapper.OrderMapper">

    <select id="getOrderDetailByTableName" parameterType="String" resultMap="OrderResultMap">
        SELECT 
            o.id,
            o.order_status_id AS orderStatusId,
            o.item_name_zh_HK AS itemNameZhHK,
            o.item_name_zh_CN AS itemNameZhCN,
            o.item_name_en_US AS itemNameEnUS,
            o.custom_string_zh_HK AS customStringZhHK,
            o.custom_string_zh_CN AS customStringZhCN,
            o.custom_string_en_US AS customStringEnUS,
            o.price,
            o.custom_price AS customPrice,
            o.quantity,
            o.table_name AS tableName,
            o.created_at AS createdAt,
            o.updated_at AS updatedAt,
            os.status_en_US AS statusEnUS,
            os.status_zh_HK AS statusZhHK,
            os.status_zh_CN AS statusZhCN
        FROM 
            `order` o
        JOIN 
            order_status os ON o.order_status_id = os.id
        WHERE 
            o.table_name = #{tableName}
    </select>

    <select id="getAllOrders" resultMap="OrderResultMap">
        SELECT 
            o.id,
            o.order_status_id AS orderStatusId,
            o.item_name_zh_HK AS itemNameZhHK,
            o.item_name_zh_CN AS itemNameZhCN,
            o.item_name_en_US AS itemNameEnUS,
            o.custom_string_zh_HK AS customStringZhHK,
            o.custom_string_zh_CN AS customStringZhCN,
            o.custom_string_en_US AS customStringEnUS,
            o.price,
            o.custom_price AS customPrice,
            o.quantity,
            o.table_name AS tableName,
            o.created_at AS createdAt,
            o.updated_at AS updatedAt,
            os.status_en_US AS statusEnUS,
            os.status_zh_HK AS statusZhHK,
            os.status_zh_CN AS statusZhCN
        FROM 
            `order` o
        JOIN 
            order_status os ON o.order_status_id = os.id
        ORDER BY
            o.created_at ASC
    </select>

    <resultMap id="OrderResultMap" type="com.server.model.Order">
        <id property="id" column="id"/>
        <result property="orderStatusId" column="orderStatusId"/>
        <result property="itemNameZhHK" column="itemNameZhHK"/>
        <result property="itemNameZhCN" column="itemNameZhCN"/>
        <result property="itemNameEnUS" column="itemNameEnUS"/>
        <result property="customStringZhHK" column="customStringZhHK"/>
        <result property="customStringZhCN" column="customStringZhCN"/>
        <result property="customStringEnUS" column="customStringEnUS"/>
        <result property="price" column="price"/>
        <result property="customPrice" column="customPrice"/>
        <result property="quantity" column="quantity"/>
        <result property="tableName" column="tableName"/>
        <result property="createdAt" column="createdAt"/>
        <result property="updatedAt" column="updatedAt"/>
        
        <association property="orderStatus" javaType="com.server.model.OrderStatus">
            <result property="statusEnUS" column="statusEnUS"/>
            <result property="statusZhHK" column="statusZhHK"/>
            <result property="statusZhCN" column="statusZhCN"/>
        </association>
    </resultMap>

    <insert id="CreateOrder" parameterType="map">
        INSERT INTO `order` (
            order_status_id, 
            item_name_zh_HK, 
            item_name_zh_CN, 
            item_name_en_US,
            custom_string_zh_HK, 
            custom_string_zh_CN, 
            custom_string_en_US,
            price,
            custom_price,
            quantity, 
            table_name, 
            created_at, 
            updated_at
        )
        VALUES (
            1, 
            #{item_name_zh_HK}, 
            #{item_name_zh_CN}, 
            #{item_name_en_US}, 
            #{custom_string_zh_HK}, 
            #{custom_string_zh_CN}, 
            #{custom_string_en_US},
            #{price},
            #{custom_price},
            #{quantity}, 
            #{table_name}, 
            NOW(), 
            NOW()
        )
    </insert>

    <update id="updateOrderStatus">
        UPDATE `order`
        SET 
            order_status_id = #{orderStatusId},
            updated_at = NOW()
        WHERE 
            id = #{orderId}
    </update>

    <update id="updateOrderTable">
        UPDATE `order`
        SET 
            table_name = #{newTableName},
            updated_at = NOW()
        WHERE 
            id = #{orderId}
    </update>

    <update id="updateAllOrdersTables">
        UPDATE `order`
        SET 
            table_name = #{newTableName},
            updated_at = NOW()
        WHERE 
            table_name = #{oldTableName}
            AND order_status_id IN (1, 2)
    </update>

</mapper>